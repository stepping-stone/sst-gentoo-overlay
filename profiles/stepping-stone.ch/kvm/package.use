net-analyzer/zabbix agent -sqlite3

# Continue to install nscd everywhere even if optional
sys-libs/glibc nscd

# need LVM for disk layout created after September 2013,
# but disable obsolete lvm1 support, and thin provisioning
# which pulls in dev-libs/boost
sys-fs/lvm2 -lvm1 -thin

# install a minimal git for now
dev-vcs/git -gpg -perl -python

# Enable python scripting support in vim since we have python installed anyway
# and it is required in several useful vim plugins (like syntastic, ultisnips and YCM)
app-editors/vim python

# eix is required for puppet and gets executed several times,
# enable optimization to make that (hopefully) faster
app-portage/eix optimization

# we want to be able to modify single values in config files,
# creating/modifying users and get a nice diff output
app-admin/puppet augeas shadow diff minimal

# eix pulls in sqlite anyway, furthermore it is required for bleachbit
dev-lang/python sqlite

# disable the gtk USE flag for bleachbit by default to avoid X11-dependency
sys-apps/bleachbit -gtk

# For the nullmailer setup we need sasl but no pam
mail-mta/postfix sasl -pam

# Build client libraries, disable perl support and the BDB Storage Engine
# in MySQL since we never needed it
dev-db/mysql extraengine openssl server -perl

# Build client libraries, disable perl support since we never needed it
# but enable extraengine support since it doesn't pull in anything else
dev-db/mariadb client-libs -perl extraengine
dev-db/mariadb-galera client-libs -perl extraengine

# Use sst-xtrabackup by default
dev-db/mariadb-galera sst-xtrabackup -sst-rsync

# Enable Galera features by default. This way we don't have to build
# the same ebuild with different USE flags. Galera replication needs
# to be enabled explicitly in the MariaDB configuration, therefor we
# won't have any issues with installations that don't use the Galera
# features.
>=dev-db/mariadb-10.1 galera sst-xtrabackup

# The following list enables at least the USE flags to bring the default PHP installation
# to the same level as Debian PHP (php5-cgi/cgi/fpm), aka the COMMON_CONFIG
# in http://anonscm.debian.org/cgit/pkg-php/php.git/tree/debian/rules
# Plus it restores PHP upstreams default (for flags which are enable by default at upstream
# and therefore also enabled in a Debian installation, but for some reason not enabled by default in Gentoo).
dev-lang/php -gdbm bcmath berkdb bzip2 calendar cdb ctype exif fileinfo filter flatfile ftp hash iconv inifile intl ipv6 json mhash nls opcache posix qdbm session sharedmem simplexml soap sockets ssl sysvipc tokenizer unicode wddx xml xmlreader xmlwriter zip zlib
# the following fixes the Gentoo USE flag restrictions imposed by the selection above
dev-lang/php cli gd
# enable more (0 to low-dep) packages which are usually installed as separate modules in other distros
# or built only for certain SAPIs
dev-lang/php crypt curl gmp imap pcntl pdo phar readline sqlite xmlrpc xslt
# Enable additional extensions used in some projects
dev-lang/php truetype
# Enable the php-fpm SAPI as our default SAPI
dev-lang/php fpm
app-eselect/eselect-php fpm
# Enable common database support and LDAP (which unfortunately pulls in the respective dependencies)
dev-lang/php ldap ldap-sasl mysql mysqli postgres

# Enable since it does not generate additional dependencies and is commonly used on OpenLDAP installations
net-nds/openldap overlays

# Apache 2.2
=www-servers/apache-2.2* ldap threads apache2_mpms_worker
=www-servers/apache-2.2* apache2_modules_proxy apache2_modules_proxy_ajp apache2_modules_proxy_http apache2_modules_proxy_scgi

# Configure Apache-2.4:
# * enable threads and the worker MPM
# * enable additional proxy modules used in our deployments
# * use the Gentoo default for everything else
=dev-libs/apr-util-1.5* ldap
=www-servers/apache-2.4* ldap threads apache2_mpms_worker
=www-servers/apache-2.4* apache2_modules_proxy apache2_modules_proxy_ajp apache2_modules_proxy_fcgi apache2_modules_proxy_http apache2_modules_proxy_scgi apache2_modules_proxy_wstunnel apache2_modules_remoteip

# Add support for sslv2 and sslv3 (these protocols shouldn't be used anymore
# but in some cases support is required).
dev-libs/openssl sslv2 sslv3

# Build the arping utility, which is required for propper IP failover
net-misc/iputils arping

# Build gtk+ with support for X, as either X or wayland support is required
x11-libs/gtk+ X

# Build GraphicsMagick, ImageMagick and Python's Pillow with commonly useful USE flags.
media-gfx/graphicsmagick bzip2 cxx jbig jpeg jpeg2k lzma modules openmp png svg threads truetype postscript tiff zlib
media-gfx/imagemagick bzip2 cxx jbig jpeg jpeg2k lzma openmp png raw svg truetype postscript tiff zlib
dev-python/pillow jpeg jpeg2k truetype webp truetype tiff zlib
media-video/ffmpeg mp3 opus threads vpx x264

# Build media-libs/freetype with PNG support
media-libs/freetype png

# Build uWSGI with Python support, enable the Zabbix plugin and disable the rrdtool and rsyslog plugins.
www-servers/uwsgi python uwsgi_plugins_zabbix -uwsgi_plugins_rrdtool -uwsgi_plugins_rsyslog

# Build boost with Python support, as commonly required.
dev-libs/boost python

# Install the Java Cryptographic Extension which provides a framework for encryption, key generation and key agreement
dev-java/oracle-jre-bin jce headless-awt
dev-java/oracle-jdk-bin jce headless-awt

# Install IcedTea without GTK support and don't install the X backend for AWT.
dev-java/icedtea -gtk -webstart headless-awt
dev-java/icedtea-bin -gtk -webstart headless-awt

# Remove PAM support and add support for threads in PostgreSQL
dev-db/postgresql -pam threads

# Support UTF-16 and UTF-32 matching by default (some software requires it anyway)
dev-libs/libpcre pcre16 pcre32
